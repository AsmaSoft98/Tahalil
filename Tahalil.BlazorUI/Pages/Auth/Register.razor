@page "/register"

@layout LoginLayout

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <MudGrid>
        <DataAnnotationsValidator />
        <MudItem xs="12" sm="7">
            <MudItem xs="12" Class="pt-0 pr-7 pl-7">
                <MudItem xs="12" Class="d-flex justify-center mb-0">
                    <MudPaper Class="pa-4 ma-1  rounded-circle">

                        <svg xmlns="http://www.w3.org/2000/svg" fill="#000000" width="48" height="48" viewBox="0 -64 640 640"><path d="M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4zm323-128.4l-27.8-28.1c-4.6-4.7-12.1-4.7-16.8-.1l-104.8 104-45.5-45.8c-4.6-4.7-12.1-4.7-16.8-.1l-28.1 27.9c-4.7 4.6-4.7 12.1-.1 16.8l81.7 82.3c4.6 4.7 12.1 4.7 16.8.1l141.3-140.2c4.6-4.7 4.7-12.2.1-16.8z" /></svg>

                    </MudPaper>
                </MudItem>
                <MudText>Already have an account? 
                    <MudLink Href="/pages/authentication/login">Sign In</MudLink>
                </MudText>

                <MudTextField T="string"
                              @bind-Value="user.Email"
                              Label="E-mail"
                              For="@(() => user.Email)"
                              Variant="Variant.Outlined" />

                <MudTextField T="string"
                              @bind-Value="user.Password"
                              Label="Password"
                              For="@(() => user.Password)"
                              Variant="Variant.Outlined"
                              InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon"
                              OnAdornmentClick="TogglePasswordVisibility" Class="mt-4" />

                <MudTextField T="string"
                              @bind-Value="user.ConfirmPassword"
                              Label="Confirm Password"
                              For="@(() => user.ConfirmPassword)"
                              Variant="Variant.Outlined"
                              InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon"
                              OnAdornmentClick="TogglePasswordVisibility" Class="mt-4" />

                <MudCheckBox @bind-Checked="@AgreeToTerms"
                             Label="I agree to the terms and privacy"
                             Color="Color.Primary" Class="ml-n1 my-3"/>

                <MudButton Variant="Variant.Filled" Color="Color.Secondary"
                           Disabled="@(!AgreeToTerms)" Link=""
                           Style="font-size:16px;"
                           Size="Size.Large" FullWidth="true">
                    Register
                </MudButton>
            </MudItem>
        </MudItem>

        <MudItem xs="5" sm="5" Class="d-none d-sm-flex pa-0">
            <MudImage Src="svg/register.png" ObjectFit="ObjectFit.Fill" Height="452" Class="rounded-lg" />
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    UserRegister user = new UserRegister();
    async void HandleRegistration()
    {
        var result = await authService.Register(user);
        if (result.Success)
        {
            navigationManager.NavigateTo("/login");
        }
        else
        {
            Snackbar.Add(result.Message, Severity.Error); ;
        }
    }

    string Password { get; set; }
    public bool AgreeToTerms { get; set; }

    bool PasswordVisibility;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void TogglePasswordVisibility()
    {
        @if (PasswordVisibility)
        {
            PasswordVisibility = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            PasswordVisibility = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }
}
